import { viewport } from '@telegram-apps/sdk'
import { NavLink, Outlet  } from 'react-router-dom'
import classNames from 'classnames/bind'
import { pathsRoutes } from '../../app/routes'
import { useGetPhrases } from '../../hooks'

// import { Icon } from '../../shared'

import styles from './PanelMenu.module.scss'

const cx = classNames.bind(styles)

interface Props {
	className?: string,
}

export const PanelMenu = ({
	className,
}: Props) => {
	const { wallet, tasks, game, menu } = useGetPhrases(['wallet', 'tasks', 'game', 'menu'])

	return (
		<div className={cx('panel', className, { 'isFullscreen': viewport.isFullscreen() })}>
			<NavLink
				to={pathsRoutes.wallet}
				className={({ isActive }) => isActive ? cx('item', 'active') : cx('item')}
			>
				{/* <Icon name='wallet' size='big' /> */}
				<svg id="wallet" width="24" height="24" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
					<path d="M2 9.07273C2 7.64714 2 6.93435 2.30865 6.38984C2.58015 5.91088 3.01337 5.52148 3.54622 5.27744C4.15199 5 4.94498 5 6.53097 5H16.5841C18.1701 5 18.9631 5 19.5688 5.27744C20.1017 5.52148 20.5349 5.91088 20.8064 6.38984C21.0428 6.80689 21.0981 7.32266 21.1111 8.18182H16.1593C14.8398 8.18182 14.1801 8.18182 13.6597 8.37558C12.9658 8.63393 12.4145 9.12946 12.1271 9.75317C11.9115 10.221 11.9115 10.814 11.9115 12C11.9115 13.186 11.9115 13.779 12.1271 14.2468C12.4145 14.8705 12.9658 15.3661 13.6597 15.6244C14.1801 15.8182 14.8398 15.8182 16.1593 15.8182H21.1111C21.0981 16.6773 21.0428 17.1931 20.8064 17.6102C20.5349 18.0891 20.1017 18.4785 19.5688 18.7226C18.9631 19 18.1701 19 16.5841 19H6.53097C4.94498 19 4.15199 19 3.54622 18.7226C3.01337 18.4785 2.58015 18.0891 2.30865 17.6102C2 17.0657 2 16.3529 2 14.9273V9.07273Z" />
					<path fillRule="evenodd" clipRule="evenodd" d="M13.1504 11.8409C13.1504 10.9499 13.1504 10.5044 13.3434 10.1641C13.513 9.86476 13.7838 9.62138 14.1168 9.46885C14.4954 9.29545 14.9911 9.29545 15.9823 9.29545H19.1681C20.1594 9.29545 20.655 9.29545 21.0336 9.46885C21.3666 9.62138 21.6374 9.86476 21.8071 10.1641C22 10.5044 22 10.9499 22 11.8409V12.1591C22 13.0501 22 13.4956 21.8071 13.8359C21.6374 14.1352 21.3666 14.3786 21.0336 14.5311C20.655 14.7045 20.1594 14.7045 19.1681 14.7045H15.9823C14.9911 14.7045 14.4954 14.7045 14.1168 14.5311C13.7838 14.3786 13.513 14.1352 13.3434 13.8359C13.1504 13.4956 13.1504 13.0501 13.1504 12.1591V11.8409ZM17.5752 12C17.5752 12.7029 16.9413 13.2727 16.1593 13.2727C15.3773 13.2727 14.7434 12.7029 14.7434 12C14.7434 11.2971 15.3773 10.7273 16.1593 10.7273C16.9413 10.7273 17.5752 11.2971 17.5752 12Z" />
				</svg>
				<p className={cx('p-small')}>{wallet}</p>
			</NavLink>
			<NavLink
				to={pathsRoutes.tasks}
				className={({ isActive }) => isActive ? cx('item', 'active') : cx('item')}
			>
				{/* <Icon name='check-tasks' size='big' /> */}
				<svg id="check-tasks" width="25" height="24" viewBox="0 0 25 24" xmlns="http://www.w3.org/2000/svg">
					<path fillRule="evenodd" clipRule="evenodd" d="M12.8003 21C17.7709 21 21.8003 16.9706 21.8003 12C21.8003 7.02944 17.7709 3 12.8003 3C7.82973 3 3.80029 7.02944 3.80029 12C3.80029 16.9706 7.82973 21 12.8003 21ZM17.0404 8.6593C17.2289 8.35084 17.1317 7.94797 16.8232 7.75947C16.5148 7.57097 16.1119 7.66821 15.9234 7.97667L11.8879 14.5802L9.61087 11.9779C9.37282 11.7058 8.95931 11.6782 8.68725 11.9163C8.4152 12.1543 8.38763 12.5679 8.62568 12.8399L11.4893 16.1126C11.6265 16.2694 11.83 16.3515 12.0376 16.3338C12.2451 16.3161 12.4318 16.2007 12.5404 16.0229L17.0404 8.6593Z" />
				</svg>
				<p className={cx('p-small')}>{tasks}</p>
			</NavLink>
			<NavLink
				to={pathsRoutes.game}
				className={({ isActive }) => isActive ? cx('item', 'active') : cx('item')}
			>
				{/* <Icon name='candles' size='big' /> */}
				<svg id="candles" width="24" height="24" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
					<path fillRule="evenodd" clipRule="evenodd" d="M12 4.25C10.4812 4.25 9.25 5.48122 9.25 7V17C9.25 18.5188 10.4812 19.75 12 19.75C13.5188 19.75 14.75 18.5188 14.75 17V7C14.75 5.48122 13.5188 4.25 12 4.25Z" />
					<path fillRule="evenodd" clipRule="evenodd" d="M12 1.25C12.4142 1.25 12.75 1.58579 12.75 2V5C12.75 5.41421 12.4142 5.75 12 5.75C11.5858 5.75 11.25 5.41421 11.25 5V2C11.25 1.58579 11.5858 1.25 12 1.25ZM12 18.25C12.4142 18.25 12.75 18.5858 12.75 19V22C12.75 22.4142 12.4142 22.75 12 22.75C11.5858 22.75 11.25 22.4142 11.25 22V19C11.25 18.5858 11.5858 18.25 12 18.25Z" />
					<path fillRule="evenodd" clipRule="evenodd" d="M20 2.75C18.4812 2.75 17.25 3.98122 17.25 5.5V7.5C17.25 9.01878 18.4812 10.25 20 10.25C21.5188 10.25 22.75 9.01878 22.75 7.5V5.5C22.75 3.98122 21.5188 2.75 20 2.75Z" />
					<path fillRule="evenodd" clipRule="evenodd" d="M4 21.25C2.48122 21.25 1.25 20.0188 1.25 18.5V16.5C1.25 14.9812 2.48122 13.75 4 13.75C5.51878 13.75 6.75 14.9812 6.75 16.5V18.5C6.75 20.0188 5.51878 21.25 4 21.25Z" />
					<path fillRule="evenodd" clipRule="evenodd" d="M20 1.25C20.4142 1.25 20.75 1.58579 20.75 2V3.5C20.75 3.91421 20.4142 4.25 20 4.25C19.5858 4.25 19.25 3.91421 19.25 3.5V2C19.25 1.58579 19.5858 1.25 20 1.25ZM20 8.75C20.4142 8.75 20.75 9.08579 20.75 9.5V14C20.75 14.4142 20.4142 14.75 20 14.75C19.5858 14.75 19.25 14.4142 19.25 14V9.5C19.25 9.08579 19.5858 8.75 20 8.75Z" />
					<path fillRule="evenodd" clipRule="evenodd" d="M4 22.75C4.41421 22.75 4.75 22.4142 4.75 22V20.5C4.75 20.0858 4.41421 19.75 4 19.75C3.58579 19.75 3.25 20.0858 3.25 20.5V22C3.25 22.4142 3.58579 22.75 4 22.75ZM4 15.25C4.41421 15.25 4.75 14.9142 4.75 14.5V10C4.75 9.58579 4.41421 9.25 4 9.25C3.58579 9.25 3.25 9.58579 3.25 10V14.5C3.25 14.9142 3.58579 15.25 4 15.25Z" />
				</svg>
				<p className={cx('p-small')}>{game}</p>
			</NavLink>
			<NavLink
				to={pathsRoutes.stats}
				className={({ isActive }) => isActive ? cx('item', 'active') : cx('item')}
			>
				{/* <Icon name='persons' size='big' /> */}
				<svg id="persons" width="24" height="24" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
					<path d="M9.02494 2C6.4102 2 4.28447 4.13001 4.28447 6.75003C4.28447 9.32004 6.29044 11.4001 8.90518 11.4901C8.98502 11.4801 9.06486 11.4801 9.12474 11.4901C9.1447 11.4901 9.15468 11.4901 9.17464 11.4901C9.18462 11.4901 9.18462 11.4901 9.1946 11.4901C11.7495 11.4001 13.7554 9.32004 13.7654 6.75003C13.7654 4.13001 11.6397 2 9.02494 2Z" />
					<path d="M14.0957 14.15C11.3113 12.2899 6.77041 12.2899 3.96605 14.15C2.6986 15 2 16.15 2 17.38C2 18.61 2.6986 19.75 3.95607 20.59C5.35326 21.53 7.18957 22 9.02588 22C10.8622 22 12.6985 21.53 14.0957 20.59C15.3532 19.74 16.0518 18.6 16.0518 17.36C16.0418 16.13 15.3532 14.99 14.0957 14.15Z" />
					<path d="M19.9923 7.34013C20.1519 9.28014 18.7747 10.9802 16.8685 11.2102C16.8586 11.2102 16.8586 11.2102 16.8486 11.2102H16.8186C16.7588 11.2102 16.6989 11.2102 16.649 11.2302C15.6809 11.2802 14.7927 10.9702 14.1241 10.4001C15.152 9.48014 15.7408 8.10013 15.6211 6.60013C15.5512 5.79012 15.2718 5.05012 14.8526 4.42011C15.2318 4.23011 15.671 4.11011 16.1201 4.07011C18.0761 3.90011 19.8226 5.36012 19.9923 7.34013Z" />
					<path d="M21.9891 16.59C21.9093 17.56 21.2905 18.4 20.2526 18.97C19.2546 19.52 17.9971 19.78 16.7496 19.75C17.4682 19.1 17.8874 18.29 17.9672 17.43C18.067 16.19 17.4782 15 16.3006 14.05C15.6319 13.52 14.8535 13.1 14.0052 12.79C16.2107 12.15 18.9852 12.58 20.6917 13.96C21.6099 14.7 22.0789 15.63 21.9891 16.59Z" />
				</svg>
				<p className={cx('p-small')}>Stats</p>
			</NavLink>
			<NavLink
				to={pathsRoutes.menu}
				className={({ isActive }) => isActive ? cx('item', 'active') : cx('item')}
			>
				{/* <Icon name='burger' size='big' /> */}
				<svg id="burger" width="24" height="24" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
					<path fillRule="evenodd" clipRule="evenodd" d="M3 7C3 6.44772 3.44772 6 4 6H20C20.5523 6 21 6.44772 21 7C21 7.55228 20.5523 8 20 8H4C3.44772 8 3 7.55228 3 7ZM3 17C3 16.4477 3.44772 16 4 16H20C20.5523 16 21 16.4477 21 17C21 17.5523 20.5523 18 20 18H4C3.44772 18 3 17.5523 3 17ZM4 11C3.44772 11 3 11.4477 3 12C3 12.5523 3.44772 13 4 13H20C20.5523 13 21 12.5523 21 12C21 11.4477 20.5523 11 20 11H4Z" />
				</svg>
				<p className={cx('p-small')}>{menu}</p>
			</NavLink>
			<Outlet />
		</div>
	)
}
